// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelRoutesManagement.Infrastructure.Contexts;

#nullable disable

namespace TravelRoutesManagement.Data.Migrations
{
    [DbContext(typeof(TravelRouteContext))]
    partial class TravelRouteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelRoutesManagement.Domain.Entities.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("TravelRoutesManagement.Domain.Entities.FlightConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AirportDestinationId")
                        .HasColumnType("int");

                    b.Property<int>("AirportOriginId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AirportDestinationId");

                    b.HasIndex("AirportOriginId", "AirportDestinationId")
                        .IsUnique();

                    b.ToTable("FlightConnections");
                });

            modelBuilder.Entity("TravelRoutesManagement.Domain.Entities.FlightConnection", b =>
                {
                    b.HasOne("TravelRoutesManagement.Domain.Entities.Airport", "AirportDestination")
                        .WithMany()
                        .HasForeignKey("AirportDestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelRoutesManagement.Domain.Entities.Airport", "AirportOrigin")
                        .WithMany()
                        .HasForeignKey("AirportOriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirportDestination");

                    b.Navigation("AirportOrigin");
                });
#pragma warning restore 612, 618
        }
    }
}
